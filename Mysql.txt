object mysqlpoc{
val DF = spark.read.format("jdbc").options(
  Map("url" ->  "jdbc:mysql-URL",
  "dbtable" -> "Mysql-dbname",
  "fetchSize" -> "10000",
  "partitionColumn" -> "partitionColumn", "lowerBound" -> "", "upperBound" -> "", "numPartitions" -> ""
  )).load()
 
val output=DF.foreach(x=>test(x.split('')(0),....))


val out_growth_factor :Integer =0
def test(state : String,P_manu :Integer,condo_flag :String,hpi_orig :Integer,hpi_curr :Integer,cpi_orig :Integer,cpi_curr :Integer)
{
if(condo_flag.equals('Y'))
val out_growth_factor=cpi_curr/cpi_orig
else
val out_growth_factor=hpi_curr/hpi_orig
if(state.contains('GU'&&'VI')|| (P_manu<>0 || p_manu.equals('NULL')) &&out_growth_factor>1)
return 1
else
out_growth_factor
}

}